http://www.android-studio.org/
https://developer.android.google.cn/about/versions/marshmallow/android-6.0-samples.html
https://developer.android.google.cn/training/index.html
---------------------------------------------------------------------------------------------
If you're using the v7 appcompat library, your activity should instead extend AppCompatActivity, 
which is a subclass of FragmentActivity. For more information, read Adding the App Bar).

V7 already references v4, so just use v7 support library
---------------------------------------------------------------------------------------------
Fragment lifecycle:
onAttach()
onCreate()
onStart()
All Fragment-to-Fragment communication is done through the associated Activity. Two Fragments should never communicate directly.

button->onClick() doesn't work in Fragment, have to add onClickListener programmatically
---------------------------------------------------------------------------------------------
The SharedPreferences APIs are only for reading and writing key-value pairs and you should not confuse them with the Preference APIs, 
which help you build a user interface for your app settings 
(although they use SharedPreferences as their implementation to save the app settings). 

Context context = getActivity();
SharedPreferences sharedPref = context.getSharedPreferences(getString(R.string.preference_file_key), Context.MODE_PRIVATE);
SharedPreferences sharedPref = getActivity().getPreferences(Context.MODE_PRIVATE);		
---------------------------------------------------------------------------------------------
Internal Storage
getFilesDir() -- /data/data/com.example.i325639.myapplication/files
getCacheDir() -- will be deleted without warning

External Storage
getExternalFilesDir() -- only for your app 
--/storage/emulated/0/Android/data/com.example.i325639.myapplication/files/Pictures/JPEG_20171108_141741_2108820709.jpg

getExternalStoragePublicDirectory() -- like music, camera

Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_PICTURES) //public, when uninstall, not removed
Context.getExternalFilesDir(Environment.DIRECTORY_PICTURES)  //also public, but when uninstall, removed too
---------------------------------------------------------------------------------------------
how to hide title bar?
In styles.xml, add below:
    <style name="MyMaterialTheme.Base" parent="Theme.AppCompat.Light.DarkActionBar">
        <item name="windowNoTitle">true</item>
        <item name="windowActionBar">false</item>
	</style>
---------------------------------------------------------------------------------------------
in build.gradle, use "api" or "implementation", "compile" is deprecated.
https://stackoverflow.com/questions/44413952/gradle-implementation-vs-api-configuration
---------------------------------------------------------------------------------------------
collapsible toolbar layout
the widget below toolbar, must have below configuration
app:layout_behavior="@string/appbar_scrolling_view_behavior"
---------------------------------------------------------------------------------------------
smart lock sign in, must have a google account before sign in, otherwise, the "save password" dialog won't show,
it seems very easy in Oreo, just like a "remember password" functionality, it will auto fill the username, password text field.
https://codelabs.developers.google.com/codelabs/android-smart-lock/#5
---------------------------------------------------------------------------------------------
create library(aar) file, and can convert a module project to a library project:
https://developer.android.com/studio/projects/android-library.html
---------------------------------------------------------------------------------------------
instant app:
https://developer.android.com/topic/instant-apps/guides/index.html
https://codelabs.developers.google.com/codelabs/android-instant-apps/#5
publish to google store:
https://support.google.com/googleplay/android-developer/answer/7381861
------------------------------------------------------------------------------------------
kotlin
if value changed, trigger listener

fun main(args: Array<String>) {
	name = "old";
	name = "new";
}

var name:String by Delegates.observable("hello"){
	prop, old, new ->
		println("${old} ${new}");
		println("${old} ${new}");
}
------------------------------------------------------------------------------------------
https://www.jianshu.com/u/c50b715ccaeb
https://www.infoq.com/articles/rxjava2-by-example
https://www.jianshu.com/p/220955eefc1f
https://juejin.im/entry/5884374e570c350062c1ac3b

多次指定上游的线程只有第一次指定的有效, 也就是说多次调用subscribeOn() 只有第一次的有效, 其余的会被忽略.
多次指定下游的线程是可以的, 也就是说每调用一次observeOn() , 下游的线程就会切换一次.
observable.subscribeOn(Schedulers.newThread())     
         .subscribeOn(Schedulers.io())              
         .observeOn(AndroidSchedulers.mainThread()) 
         .observeOn(Schedulers.io())                
         .subscribe(consumer);

map和flatMap，前者是数据类型或者数据结构的改变，而后者是将源Observale转换为新建Observale.
因为flatmap能转化发射源，既“Observable<RegisterResponse>” -> "Observable<LoginResponse>" ,配合Retrofit就能在完成注册事件后继续完成登录事件。
map操作符只能把“Observable<RegisterResponse>”里面的“RegisterResponse”转化成“LoginResponse”，而“LoginResponse”只是一个model对象，不能作为发射源完成登录操作。

fun initializeObjects() {
    initializeObjectsAsync()
        .subscribeOn(Schedulers.computation())
        .observeOn(AndroidSchedulers.mainThread())
        .subscribe({
            // The initialization succeeded!
            // We can perform UI changes here 
        }, {
            // An Error occurred!
        })
}
---------------------------------------------------------------------------------------------------
wechat login

SAML
https://docs.spring.io/spring-security-saml/docs/1.0.x/reference/html/chapter-quick-start.html

xml sign, is used in soap and saml, so to better understand saml, need to understand xml sign first
http://www.oracle.com/technetwork/articles/javase/dig-signature-api-140772.html
https://zh.wikipedia.org/wiki/XML_Signature
https://www.ibm.com/developerworks/cn/xml/x-digsig/


<samlp:Response xmlns:samlp="urn:oasis:names:tc:SAML:2.0:protocol" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" ID="pfxf3137833-a23a-c6b8-c018-892783104c23" Version="2.0" IssueInstant="2014-07-17T01:01:48Z" Destination="http://sp.example.com/demo1/index.php?acs" InResponseTo="ONELOGIN_4fee3b046395c4e751011e97f8900b5273d56685">
	<saml:Issuer>http://idp.example.com/metadata.php</saml:Issuer>
	
	<ds:Signature xmlns:ds="http://www.w3.org/2000/09/xmldsig#">
		<ds:SignedInfo>
			<ds:CanonicalizationMethod Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"/> <!-- format the xml, handle like space \r \n etc.-->
			<ds:SignatureMethod Algorithm="http://www.w3.org/2000/09/xmldsig#rsa-sha1"/>
			<ds:Reference URI="#pfxf3137833-a23a-c6b8-c018-892783104c23"> <!-- reference the xml xpath that will be hashed-->
			<ds:Transforms>
				<ds:Transform Algorithm="http://www.w3.org/2000/09/xmldsig#enveloped-signature"/>
				<ds:Transform Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"/>
			</ds:Transforms>
			<ds:DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha1"/>
			<ds:DigestValue>1iCUGLUe2L0CR6TH+7RoXCEPzm8=</ds:DigestValue> <!-- the hashed xml-->
			</ds:Reference>
		</ds:SignedInfo>
		<ds:SignatureValue> <!-- the SignatureValue is hashed then encrypted value of <SignedInfo> -->
			0wMcOkdcJvosVbCedFXJ79qAyODJiRJFxJKvWDiqbIsWmy7XpkIuTw2zDmq8Zwj+lv/4M4sYBZN9pzfpxUA/EWFUgRpSXSvX6+stauDX5A2Y8Ebrok8MGGqSOvfLII8+SYeHp3jhwehXacfag4X+z1SZIZ4QQJh+Q/Pha0HFKDA=
		</ds:SignatureValue>
		<ds:KeyInfo>
			<ds:X509Data>
				<ds:X509Certificate> <!-- it's the 509 certificate, got from .cer file, it's the public key-->
					MIICajCCAdOgAwIBAgIBADANBgkqhkiG9w0BAQ0FADBSMQswCQYDVQQGEwJ1czETMBEGA1UECAwKQ2FsaWZvcm5pYTEVMBMGA1UECgwMT25lbG9naW4gSW5jMRcwFQYDVQQDDA5zcC5leGFtcGxlLmNvbTAeFw0xNDA3MTcxNDEyNTZaFw0xNTA3MTcxNDEyNTZaMFIxCzAJBgNVBAYTAnVzMRMwEQYDVQQIDApDYWxpZm9ybmlhMRUwEwYDVQQKDAxPbmVsb2dpbiBJbmMxFzAVBgNVBAMMDnNwLmV4YW1wbGUuY29tMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDZx+ON4IUoIWxgukTb1tOiX3bMYzYQiwWPUNMp+Fq82xoNogso2bykZG0yiJm5o8zv/sd6pGouayMgkx/2FSOdc36T0jGbCHuRSbtia0PEzNIRtmViMrt3AeoWBidRXmZsxCNLwgIV6dn2WpuE5Az0bHgpZnQxTKFek0BMKU/d8wIDAQABo1AwTjAdBgNVHQ4EFgQUGHxYqZYyX7cTxKVODVgZwSTdCnwwHwYDVR0jBBgwFoAUGHxYqZYyX7cTxKVODVgZwSTdCnwwDAYDVR0TBAUwAwEB/zANBgkqhkiG9w0BAQ0FAAOBgQByFOl+hMFICbd3DJfnp2Rgd/dqttsZG/tyhILWvErbio/DEe98mXpowhTkC04ENprOyXi7ZbUqiicF89uAGyt1oqgTUCD1VsLahqIcmrzgumNyTwLGWo17WDAa1/usDhetWAMhgzF/Cnf5ek0nK00m0YZGyc4LzgD0CROMASTWNg==
				</ds:X509Certificate>
			</ds:X509Data>
		</ds:KeyInfo>
	</ds:Signature>
	
当验证一个XML签名时，需要遵守一个称作核心验证（Core Validation）的程序：

引用验证：每一个引用的摘要都通过获取相应的资源，并且按照指定的转换方法和摘要方法进行转换和摘要，然后将结果与DigestValue元素中的内容进行比较，如果不匹配，验证失败。 Use DigestValue
签名验证：SignedInfo元素使用CanonicalizationMethod元素中指定的XML标准化方法进行处理，密钥或取自KeyInfo元素或通过其他方法取得，然后通过SignatureMethod指定的签名方法进行验签。

---------------------------------------------------------------------------------------------------
ADB:
C:\Users\i325639\AppData\Local\Android\Sdk\platform-tools
adb devices
adb push C:/Users/i325639/Desktop/software.txt /sdcard/download
adb pull /sdcard/Download/pic.jpg /home/myhome/Desktop/pic.jpg
adb install myapplication.apk










































